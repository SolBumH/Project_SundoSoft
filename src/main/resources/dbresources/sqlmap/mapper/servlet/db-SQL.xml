<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="db">
	<delete id="deleteAll">
		TRUNCATE TABLE "TB_CARBON_B5"
	</delete>

	<insert id="insertData" parameterType="list">
		insert into "TB_CARBON_B5" ("sggCode", "bjdCode", "usage")
		values
		<foreach collection="list" item="list" index="index"
			separator=",">
			(#{list.sggCode}, #{list.bjdCode}, #{list.usage})
		</foreach>
	</insert>

	<select id="sdList" resultType="hashMap">
		select sd_nm, sd_cd from tl_sd
	</select>

	<select id="sdUsage" resultType="hashMap">
		select tcb.sd_cd as "citiCd",
		ts.sd_nm as "cityNm", tcb.usage
		from (select substring("sggCode", 1, 2) as sd_cd, sum(usage) as usage
		from "TB_CARBON_B5"
		group by sd_cd) tcb join tl_sd ts
		on tcb.sd_cd = ts.sd_cd
	</select>

	<select id="sggUsage" parameterType="String"
		resultType="hashMap">
		select ts.sgg_cd as "cityCd", ts.sgg_nm as "cityNm",
		tcb.usage
		from
		(select "sggCode", sum(usage) as usage
		from "TB_CARBON_B5"
		where substring("sggCode", 1, 2) = #{sd_cd}
		group by "sggCode") tcb join tl_sgg ts
		on tcb."sggCode" = ts.sgg_cd
	</select>

	<select id="getSdCoordinate" parameterType="String" resultType="map">
		select
		(select ST_XMax(geom) as xmax FROM tl_sd WHERE sd_cd = #{sd_cd} order by xmax
		desc limit 1)
		,(select ST_YMax(geom) as ymax FROM tl_sd WHERE sd_cd =#{sd_cd} order by ymax
		desc limit 1)
		,(select ST_XMin(geom) as xmin FROM tl_sd WHERE sd_cd = #{sd_cd} order by xmin
		limit 1)
		,(select ST_YMin(geom) as ymin FROM tl_sd WHERE sd_cd = #{sd_cd} order by ymin
		limit 1)
		from tl_sd limit 1
	</select>

	<select id="getSggCoordinate" parameterType="String" resultType="map">
		select
		(select ST_XMax(geom) as xmax FROM tl_sgg WHERE sgg_cd = #{sgg_cd} order by
		xmax desc limit 1)
		,(select ST_YMax(geom) as ymax FROM tl_sgg WHERE sgg_cd =#{sgg_cd} order by
		ymax desc limit 1)
		,(select ST_XMin(geom) as xmin FROM tl_sgg WHERE sgg_cd = #{sgg_cd} order by
		xmin limit 1)
		,(select ST_YMin(geom) as ymin FROM tl_sgg WHERE sgg_cd = #{sgg_cd} order by
		ymin limit 1)
		from tl_sgg limit 1
	</select>
	
	<update id="updateMaterialized">
	  REFRESH MATERIALIZED VIEW "b5_sgg_view";
	  REFRESH MATERIALIZED VIEW "b5_dgg_sgg_view";
	  REFRESH MATERIALIZED VIEW "b5_bjd_view";
	  REFRESH MATERIALIZED VIEW "b5_dgg_bjd_view";
	</update>
	
	<select id="getBjdBum" parameterType="Integer" resultType="hashMap">
		<choose>
			<when test="level eq 1">
				select 
				coalesce(lag(usage, 1) over (order by usage), 0) as lag,
				usage
				from 
				(select max(usage) as usage
					from b5_bjd_view
					group by natural_grade
					order by usage) bdbv
			</when>
			<when test="level eq 2">
				select 
				coalesce(lag(usage, 1) over (order by usage), 0) as lag,
				usage
				from 
				(select max(usage) as usage
					from b5_bjd_view
					group by dgg_grade
					order by usage) bdbv
			</when>
			<when test="level eq 3">
				select 
				coalesce(lag(usage, 1) over (order by usage), 0) as lag,
				usage
				from
				(select max(usage) as usage
					from b5_dgg_bjd_view
					group by dgg_grade
					order by usage) bdbv
			</when>
		</choose>
	</select>
	
	<select id="getSggBum" parameterType="Integer" resultType="hashMap">
		<choose>
			<when test="level eq 1">
				select 
				coalesce(lag(usage, 1) over (order by usage), 0) as lag,
				usage
				from 
				(select max(usage) as usage
					from b5_sgg_view
					group by natural_grade
					order by usage) bdbv
			</when>
			<when test="level eq 2">
				select 
				coalesce(lag(usage, 1) over (order by usage), 0) as lag,
				usage
				from 
				(select max(usage) as usage
					from b5_sgg_view
					group by dgg_grade
					order by usage) bdbv
			</when>
			<when test="level eq 3">
				select 
				coalesce(lag(usage, 1) over (order by usage), 0) as lag,
				usage
				from 
				(select max(usage) as usage
					from b5_dgg_sgg_view
					group by dgg_grade
					order by usage) bdbv
			</when>
		</choose>
	</select>
</mapper>